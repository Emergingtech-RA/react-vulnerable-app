name: Build and deploy Node.js app to Azure Web App - demo-app-react

on:
  push:
    branches:
      - development
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js version
        uses: actions/setup-node@v1
        with:
          node-version: '18.x'

      - name: npm install, build, and test
        env:
          CI: false
        run: |
          npm install
          npm run build --if-present
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: node-app
          path: build/

  codeql-analysis-SCA:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
      
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
      
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{ matrix.language }}"

  sonarcloud-SAST:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy-to-staging:
    runs-on: ubuntu-latest
    needs: [codeql-analysis-SCA,sonarcloud-SAST]
    environment:
      name: 'stg'
      url: 'https://demo-app-react-staging.azurewebsites.net/'

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: node-app

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'demo-app-react'
          slot-name: 'staging'  # Deploying to the staging slot
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}
          package: .

  deploy-prod:
    runs-on: ubuntu-latest
    needs: deploy-to-staging
    environment:
      name: 'prod'
      url: 'https://demo-app-react.azurewebsites.net/'

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: node-app

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'demo-app-react'
          slot-name: 'Production'  # Deploying to the production slot
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_ECACBD4D3D754F6CB84546630B51CE8D }}
          package: .
